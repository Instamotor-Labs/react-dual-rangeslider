{"version":3,"sources":["../src/RangeSlider.js"],"names":[],"mappings":"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","file":"RangeSlider.js","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\n\n\nif(typeof window !== 'undefined') {\n    require('./rangeslider.css');\n    require('./atomic.css');\n}\n\nclass RangeSlider extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            min: props.min,\n            max: props.max,\n            minElement: null,\n            maxElement: null,\n            minRange: props.minRange || 500\n        };\n    }\n    componentDidMount() {\n        var min = this.props.minValue || this.props.min;\n        var max = this.props.maxValue || this.props.max;\n        this.state.minElement.value = min;\n        this.state.maxElement.value = max;\n        this.setState({min: min, max: max});\n    }\n    componentWillReceiveProps(props) {\n        var min = this.props.minValue || this.props.min;\n        var max = this.props.maxValue || this.props.max;\n        this.state.minElement.value = min;\n        this.state.maxElement.value = max;\n        this.setState({min: min, max: max});\n    }\n    render() {\n        var ret = (\n            <div className=\"W(100%)\">\n                <div className=\"D(ib) C(#4e5b65)\">\n                    {numeral(this.state.min).format('$0,0')}\n                </div>\n                <div className=\"D(ib) Fl(end) C(#4e5b65)\">\n                        {numeral(this.state.max).format('$0,0')}{(this.props.max === this.state.max) ? '+' : ''}\n                </div>\n                <div\n                    style={this.props.style}\n                    className={this.props.ClassName + ' range-slider Pos(r) Ta(c) H(35px)'}>\n                    <input\n                        onChange={\n                            (ev)=>{\n                                if(ev.target.value < this.state.max - this.state.minRange) {\n                                    this.setState(\n                                        {min: parseInt(ev.target.value)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                                else {\n                                    this.state.minElement.value = this.state.min;\n                                    this.setState(\n                                        {min: parseInt(this.state.min)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                            }\n                        }\n                        ref={(el)=>{this.state.minElement = el}}\n                        min={this.props.min}\n                        max={this.props.max}\n                        step={this.props.step}\n                        type=\"range\"\n                    />\n                    <input\n                        onChange={\n                            (ev)=>{\n                                if(ev.target.value > this.state.min + this.state.minRange) {\n                                    this.setState(\n                                        {max: parseInt(ev.target.value)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                                else {\n                                    this.state.maxElement.value = this.state.max;\n                                    this.setState(\n                                        {max: parseInt(this.state.max)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                            }\n                        }\n                        ref={(el)=>{this.state.maxElement = el}}\n                        min={this.props.min}\n                        max={this.props.max}\n                        step={this.props.step}\n                        type=\"range\"\n                    />\n                    <div style={{\n                            position: 'absolute',\n                            boxSizing: 'border-box',\n                            width: '100%',\n                            paddingLeft: '8px',\n                            paddingRight: '8px',\n                            top: '7px'\n                        }}>\n                        <div style={{\n                            marginLeft: (this.state.min - this.props.min)/(this.props.max - this.props.min)*100 + '%',\n                            width: (100-(this.state.min - this.props.min + this.props.max - this.state.max)/(this.props.max - this.props.min)*100) + '%', \n                            height: '4px',\n                            backgroundColor: '#5FCCC7'\n                        }}></div>\n                    </div>\n                </div>\n            </div>\n        );\n        return ret;\n    }\n}\n\nexport default RangeSlider;\n"]}